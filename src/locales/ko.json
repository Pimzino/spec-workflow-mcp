{
  "tools": {
    "steeringGuide": {
      "description": "프로젝트 가이드 문서 작성을 위한 가이드를 로드합니다.\n\n# 지침\n사용자가 가이드 문서 작성을 명시적으로 요청하거나 프로젝트 아키텍처 문서에 대해 질문할 때만 호출하세요. 표준 스펙 워크플로우의 일부가 아닙니다. product.md, tech.md, structure.md 생성을 위한 템플릿과 가이드를 제공합니다.",
      "successMessage": "가이드 워크플로우 가이드가 로드됨 - 정확히 이 워크플로우를 따르세요",
      "dashboardMessage": "대시보드: {{dashboardUrl}}",
      "dashboardUnavailable": "대시보드를 사용할 수 없음",
      "nextSteps": {
        "proceedIfRequested": "사용자가 가이드 문서를 요청한 경우에만 진행",
        "createProduct": "먼저 product.md 생성",
        "createTechAndStructure": "그 다음 tech.md와 structure.md",
        "reference": "향후 스펙에서 참조"
      },
      "guide": "# 가이드 워크플로우\n\n## 개요\n\n명시적으로 요청된 경우 프로젝트 레벨 가이드 문서를 생성합니다. 가이드 문서는 기존 코드베이스에 대한 비전, 아키텍처, 컨벤션을 설정합니다.\n\n## 워크플로우 다이어그램\n\n```mermaid\nflowchart TD\n    Start([시작: 가이드 문서 설정]) --> Guide[steering-guide<br/>워크플로우 지침 로드]\n    \n    %% 1단계: 제품\n    Guide --> P1_Template[get-template-context<br/>templateType: steering<br/>template: product]\n    P1_Template --> P1_Generate[비전과 목표 생성]\n    P1_Generate --> P1_Create[create-steering-doc<br/>document: product]\n    P1_Create --> P1_Approve[request-approval<br/>filePath만]\n    P1_Approve --> P1_Status[get-approval-status<br/>상태 폴링]\n    P1_Status --> P1_Check{상태는?}\n    P1_Check -->|needs-revision| P1_Update[사용자 의견을 참고하여 문서 업데이트]\n    P1_Update --> P1_Create\n    P1_Check -->|approved| P1_Clean[delete-approval]\n    P1_Clean -->|failed| P1_Status\n    \n    %% 2단계: 기술\n    P1_Clean -->|success| P2_Template[get-template-context<br/>templateType: steering<br/>template: tech]\n    P2_Template --> P2_Analyze[기술 스택 분석]\n    P2_Analyze --> P2_Create[create-steering-doc<br/>document: tech]\n    P2_Create --> P2_Approve[request-approval<br/>filePath만]\n    P2_Approve --> P2_Status[get-approval-status<br/>상태 폴링]\n    P2_Status --> P2_Check{상태는?}\n    P2_Check -->|needs-revision| P2_Update[사용자 의견을 참고하여 문서 업데이트]\n    P2_Update --> P2_Create\n    P2_Check -->|approved| P2_Clean[delete-approval]\n    P2_Clean -->|failed| P2_Status\n    \n    %% 3단계: 구조\n    P2_Clean -->|success| P3_Template[get-template-context<br/>templateType: steering<br/>template: structure]\n    P3_Template --> P3_Analyze[코드베이스 구조 분석]\n    P3_Analyze --> P3_Create[create-steering-doc<br/>document: structure]\n    P3_Create --> P3_Approve[request-approval<br/>filePath만]\n    P3_Approve --> P3_Status[get-approval-status<br/>상태 폴링]\n    P3_Status --> P3_Check{상태는?}\n    P3_Check -->|needs-revision| P3_Update[사용자 의견을 참고하여 문서 업데이트]\n    P3_Update --> P3_Create\n    P3_Check -->|approved| P3_Clean[delete-approval]\n    P3_Clean -->|failed| P3_Status\n    \n    P3_Clean -->|success| Complete([가이드 문서 완료])\n    \n    style Start fill:#e6f3ff\n    style Complete fill:#e6f3ff\n    style P1_Check fill:#ffe6e6\n    style P2_Check fill:#ffe6e6\n    style P3_Check fill:#ffe6e6\n```\n\n## 가이드 워크플로우 단계\n\n### 1단계: 제품 문서\n**목적**: 비전, 목표, 사용자 결과를 정의합니다.\n\n**도구**:\n- steering-guide: 워크플로우 지침 로드\n- get-template-context: 제품 템플릿 로드 (templateType: \"steering\", template: \"product\")\n- create-steering-doc: product.md 생성\n- request-approval: 사용자 승인 받기\n- get-approval-status: 승인 상태 확인\n- delete-approval: 승인 후 정리\n\n**프로세스**:\n1. 워크플로우 개요를 위한 가이드 로드\n2. 제품 템플릿 로드\n3. 제품 비전과 목표 생성\n4. create-steering-doc으로 문서 생성\n5. 승인 요청 (filePath만)\n6. 승인/수정필요 상태까지 폴링 (구두 승인은 절대 수락하지 않음)\n7. 수정필요 시: 문서 업데이트, 새 승인 생성, 진행하지 않음\n8. 승인 시: 진행 전 delete-approval (성공해야 함)\n9. delete-approval 실패 시: 중단 - 폴링으로 돌아가기\n\n### 2단계: 기술 문서\n**목적**: 기술 결정사항과 아키텍처를 문서화합니다.\n\n**도구**:\n- get-template-context: 기술 템플릿 로드 (templateType: \"steering\", template: \"tech\")\n- create-steering-doc: tech.md 생성\n- request-approval: 사용자 승인 받기\n- get-approval-status: 상태 확인\n- delete-approval: 정리\n\n**프로세스**:\n1. 기술 템플릿 로드\n2. 기존 기술 스택 분석\n3. 아키텍처 결정사항과 패턴 문서화\n4. 문서 생성 및 승인 요청\n5. 승인/수정필요 상태까지 폴링\n6. 수정필요 시: 문서 업데이트, 새 승인 생성, 진행하지 않음\n7. 승인 시: 진행 전 delete-approval (성공해야 함)\n8. delete-approval 실패 시: 중단 - 폴링으로 돌아가기\n\n### 3단계: 구조 문서\n**목적**: 코드베이스 구성과 패턴을 매핑합니다.\n\n**도구**:\n- get-template-context: 구조 템플릿 로드 (templateType: \"steering\", template: \"structure\")\n- create-steering-doc: structure.md 생성\n- request-approval: 사용자 승인 받기\n- get-approval-status: 상태 확인\n- delete-approval: 정리\n\n**프로세스**:\n1. 구조 템플릿 로드\n2. 디렉토리 구조와 파일 구성 분석\n3. 코딩 패턴과 컨벤션 문서화\n4. 문서 생성 및 승인 요청\n5. 승인/수정필요 상태까지 폴링\n6. 수정필요 시: 문서 업데이트, 새 승인 생성, 진행하지 않음\n7. 승인 시: 진행 전 delete-approval (성공해야 함)\n8. delete-approval 실패 시: 중단 - 폴링으로 돌아가기\n9. 성공적인 정리 후: \"가이드 문서 완료. 스펙 생성 준비가 되었나요?\"\n\n## 워크플로우 규칙\n\n- 항상 MCP 도구 사용, 절대 수동으로 문서 생성하지 않기\n- 정확한 템플릿 구조 따르기\n- 단계별 명시적 사용자 승인 받기\n- 순차적으로 단계 완료 (건너뛰기 금지)\n- 승인 요청: filePath만 제공, 내용은 절대 제공하지 않기\n- 차단: delete-approval 실패 시 절대 진행하지 않기\n- 중요: 다음 단계 진행 전 승인 상태와 성공적인 정리가 모두 필요\n- 중요: 구두 승인은 절대 수락하지 않음 - 대시보드나 VS Code 확장만 사용\n- 사용자가 \"승인\"이라고 말해도 절대 진행하지 않음 - 시스템 상태만 확인"
    },
    "specStatus": {
      "description": "포괄적인 명세서 진행 상황 개요를 표시합니다.\n\n# 지침\n스펙 작업을 재개하거나 전체 완료 상태를 확인할 때 호출하세요. 완료된 단계와 태스크 구현 진행률을 보여줍니다. 워크플로우를 계속하기 전에 현재 위치를 파악하는 데 유용합니다.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "specNameDescription": "명세서 이름",
      "successMessage": "명세서 '{{specName}}' 상태: {{overallStatus}}",
      "phases": {
        "requirements": "요구사항",
        "design": "설계",
        "tasks": "태스크",
        "implementation": "구현"
      },
      "nextSteps": {
        "requirements": {
          "create": "requirements.md 생성",
          "loadContext": "get-steering-context로 컨텍스트 로드",
          "requestApproval": "승인 요청"
        },
        "design": {
          "create": "design.md 생성",
          "reference": "요구사항 참조",
          "requestApproval": "승인 요청"
        },
        "tasks": {
          "create": "tasks.md 생성",
          "breakdown": "설계 분해",
          "requestApproval": "승인 요청"
        },
        "implementation": {
          "nextPending": "manage-tasks에서 next-pending 사용",
          "implement": "태스크 구현",
          "updateStatus": "manage-tasks로 상태 업데이트",
          "begin": "manage-tasks로 구현 시작"
        },
        "completed": {
          "complete": "스펙 완료",
          "runTests": "테스트 실행"
        }
      },
      "errors": {
        "notFound": "명세서 '{{specName}}'을(를) 찾을 수 없음",
        "genericFail": "명세서 상태 가져오기 실패: {{message}}",
        "nextSteps": {
          "checkName": "스펙 이름 확인",
          "useList": "사용 가능한 스펙을 위해 spec-list 사용",
          "create": "create-spec-doc으로 스펙 생성",
          "checkExists": "명세서가 존재하는지 확인",
          "verifyPath": "프로젝트 경로 확인",
          "useListGeneric": "사용 가능한 명세서를 보려면 spec-list 사용"
        }
      }
    },
    "specList": {
      "description": "프로젝트의 모든 명세서를 나열합니다.\n\n# 지침\n작업할 스펙을 선택하기 전에 사용 가능한 스펙을 보려면 호출하세요. 단계 완료를 포함한 각 스펙의 상태를 보여줍니다. 구현하거나 계속 작업할 스펙을 선택하는 데 유용합니다.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "successMessage_one": "{{count}}개의 명세서를 찾았습니다",
      "successMessage_other": "{{count}}개의 명세서를 찾았습니다",
      "messages": {
        "noSpecs": "명세서를 찾을 수 없습니다"
      },
      "nextSteps": {
        "noSpecs": {
          "create": "spec-create를 사용하여 새 명세서 생성",
          "example": "예시: spec-create user-authentication \"사용자 로그인 및 등록\""
        },
        "success": {
          "viewStatus": "특정 스펙의 상세 상태를 보려면 spec-status <name> 사용",
          "continue": "구현을 계속하려면 spec-execute <task-id> <name> 사용",
          "create": "spec-create로 새 명세서 생성"
        }
      },
      "errors": {
        "failed": "명세서 목록 실패: {{message}}",
        "nextSteps": {
          "checkPath": "프로젝트 경로가 존재하는지 확인",
          "verifyDir": ".spec-workflow 디렉토리가 존재하는지 확인",
          "create": "존재하지 않으면 spec-create를 사용하여 명세서 생성"
        }
      }
    },
    "requestApproval": {
      "description": "대시보드 인터페이스를 통해 사용자 승인을 요청합니다.\n\n# 지침\n각 문서를 생성한 직후 즉시 호출하세요. 다음 단계로 진행하기 전에 필수입니다. 중요: filePath 매개변수만 제공 - 대시보드가 파일을 직접 읽습니다. 요청에 문서 내용을 절대 포함하지 마세요. 계속하기 전에 사용자가 검토하고 승인할 때까지 기다리세요.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "titleDescription": "승인이 필요한 내용을 설명하는 간단한 제목",
      "filePathDescription": "승인이 필요한 파일의 경로 (프로젝트 루트 기준). 대시보드가 이 파일을 읽고 표시합니다.",
      "typeDescription": "승인 요청 유형 - 내용 승인은 \"document\", 작업 승인은 \"action\"",
      "categoryDescription": "승인 요청 카테고리 - 명세서는 \"spec\", 가이드 문서는 \"steering\"",
      "categoryNameDescription": "스펙 이름 또는 가이드 문서의 경우 \"steering\"",
      "successMessage": "승인 요청이 성공적으로 생성되었습니다. 대시보드에서 검토하세요: {{dashboardUrl}}",
      "dashboardUnavailable": "대시보드 URL을 사용할 수 없음",
      "nextSteps": {
        "blocking": "차단 - 대시보드 또는 VS Code 확장 승인 필요",
        "noVerbal": "구두 승인은 수락되지 않음",
        "noVerbalConfirm": "구두 확인으로 진행하지 마세요",
        "useDashboard": "대시보드 사용: {{dashboardUrl}} 또는 VS Code 확장",
        "useVscode": "승인을 위해 VS Code 확장 사용",
        "poll": "다음으로 상태 폴링: get-approval-status \"{{approvalId}}\""
      },
      "errors": {
        "failed": "승인 요청 생성 실패: {{message}}"
      }
    },
    "refreshTasks": {
      "description": "현재 요구사항과 설계를 바탕으로 태스크 목록을 재생성합니다.\n\n# 지침\n설계 변경 후 태스크를 업데이트해야 하거나 구현과 요구사항 간의 격차를 메우기 위해 호출하세요. 기존 requirements.md와 design.md를 분석하여 포괄적인 업데이트된 태스크 목록을 생성합니다. 기존 tasks.md를 새로운 버전으로 교체합니다.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "specNameDescription": "명세서 이름",
      "successMessage": "\"{{specName}}\"에 대한 태스크 새로고침 컨텍스트가 로드되었습니다. AI 에이전트가 태스크를 분석하고 업데이트할 준비가 되었습니다.",
      "analysis": {
        "hasTasks": "\n## 현재 태스크 분석\n**전체 태스크**: {{total}}\n**완료됨**: {{completed}} (기능이 제거되었어도 그대로 보존)\n**진행 중**: {{inProgress}} (기능이 제거되었어도 그대로 보존)\n**대기 중**: {{pending}} (requirements.md/design.md에 대해 검증 필요)\n\n### 보존할 태스크 (수정하지 말 것):\n{{completedList}}\n{{inProgressList}}\n\n### 대기 중인 태스크 (검증 필요):\n{{pendingList}}\n\n**검증 필요**: 위의 각 대기 중인 태스크에 대해 requirements.md나 design.md에서 기능이 언급되는지 확인하세요. 언급되지 않으면 태스크를 제거하세요.\n",
        "noTasks": "\n## 현재 태스크 분석\n**tasks.md가 존재하지 않음** - 처음부터 완전한 태스크 목록을 생성해야 합니다.\n",
        "none": "없음",
        "checkPrompt": "확인: 이 기능이 requirements.md에 있나요?"
      },
      "instructions": {
        "main": "# 태스크 새로고침 지침\n\n## 컨텍스트\n구현 중에 요구사항이나 설계가 변경되었을 수 있으므로 명세서 \"{{specName}}\"의 태스크 목록을 새로고침하고 있습니다. 목표는 태스크 목록이 현재 구현과 업데이트된 요구사항/설계 간의 격차를 메우기 위해 필요한 작업을 정확히 반영하도록 하는 것입니다.\n\n## 중요: 진실의 원천\n- **요구사항은 오직 requirements.md에서만 가져옴** - 기존 태스크가 아님\n- **설계 결정은 오직 design.md에서만 가져옴** - 기존 태스크가 아님\n- **태스크는 구현 단계** - 요구사항을 구현하는 것이지 정의하는 것이 아님\n- 기능이 태스크에는 존재하지만 requirements.md/design.md에는 없으면 스펙에서 제거된 것임\n\n## 3단계 검증 프로세스\n\n### 1단계: 기존 태스크를 현재 스펙에 대해 검증\n각 기존 태스크에 대해 질문: \"이 태스크가 구현하는 기능이 여전히 requirements.md나 design.md에 있는가?\"\n\n**대기 중인 태스크에 대한 조치:**\n- **유지**: 기능이 여전히 요구사항/설계에 있으면\n- **제거**: 기능이 요구사항/설계에 없으면 (스펙에서 기능이 삭제됨)\n\n**완료됨/진행 중인 태스크에 대한 조치:**\n- **보존**: 완료된 [x]과 진행 중인 [-] 태스크는 항상 유지\n- **플래그**: 기능이 제거되었으면 주석 추가: \"_참고: 기능이 스펙에서 제거되었지만 태스크는 보존됨_\"\n\n### 2단계: 격차 분석\nrequirements.md의 각 요구사항에 대해 질문: \"이것을 구현하는 태스크가 있는가?\"\ndesign.md의 각 설계 결정에 대해 질문: \"이 아키텍처와 정렬된 태스크들이 있는가?\"\n\n**조치:**\n- **추가**: 태스크 없이 요구사항/설계 요소에 대한 새 태스크\n- **업데이트**: 업데이트된 요구사항과 정렬이 필요한 기존 대기 중인 태스크\n\n### 3단계: 업데이트된 태스크 목록 생성 (변경이 필요한 경우에만)\n**결정점**: 1단계와 2단계 후 확인:\n- 제거할 대기 중인 태스크가 있나요?\n- 추가할 새 태스크가 있나요?\n- 수정할 기존 태스크가 있나요?\n\n**변경이 필요하지 않으면**: \"태스크 목록이 이미 현재 요구사항과 정렬되어 있음 - 새로고침 불필요\"라고 보고하고 중단.\n\n**변경이 필요하면**, 다음으로 새 tasks.md 구축:\n1. 모든 완료된 [x] 태스크 (그대로 보존)\n2. 모든 진행 중인 [-] 태스크 (필요시 제거 노트와 함께 그대로 보존)\n3. 현재 요구사항/설계에서 뒷받침되는 대기 중인 [ ] 태스크만\n4. 누락된 요구사항/설계 요소에 대한 새 태스크\n5. 적절한 순서와 요구사항 참조\n\n## 중요한 규칙\n- **절대** 완료된 태스크([x] 표시)를 수정하지 마세요\n- **절대** 진행 중인 태스크([-] 표시)를 수정하지 마세요\n- 현재 요구사항/설계에 없는 기능의 대기 중인 태스크는 **제거**\n- **항상** 특정 요구사항을 참조하세요 (예: _요구사항: 1.1, 2.3_)\n- **확실히** 태스크가 점진적으로 구축되도록\n- **원자적이고** 구체적이며 실행 가능한 태스크로 만드세요\n- **보존** 원본 tasks.md 구조 - 태스크 항목만 업데이트\n- tasks.md에 **추가 섹션 금지** (의존성, 메트릭, 노트, 변경 사항 등 없음)\n- tasks.md를 **깨끗하게** 유지 - 변경 요약은 채팅 응답에만\n\n## 태스크 형식 요구사항\n각 태스크는 다음 형식을 따라야 합니다:\n```\n- [ ] 1.1 사용자 인증 인터페이스 생성\n  - 파일: src/auth/UserAuth.ts\n  - 로그인 및 등록 폼 구현\n  - 폼 검증 및 오류 처리 추가\n  - 목적: 사용자 계정 관리 활성화\n  - _활용: src/components/BaseForm.tsx, src/utils/validation.ts_\n  - _요구사항: 1.1, 1.2_\n```\n\n## 구현 전략\n1. **읽기** requirements.md와 design.md를 신중히 - 이것들이 존재해야 할 것들을 정의\n2. **검증** 현재 스펙에 대한 기존 태스크 (1단계)\n3. **식별** 태스크 커버리지의 격차 (2단계)\n4. **구축** 적절한 검증이 있는 업데이트된 태스크 목록 (3단계)\n5. **사용** create-spec-doc 도구로 업데이트된 tasks.md 저장\n6. **중요**: tasks.md를 원본과 같은 형식으로 유지 - 태스크 항목만 변경\n\n## 예시: 제거된 기능 처리\n\"칸반 보기\"에 대한 태스크가 존재하지만 requirements.md에서 \"칸반 보기\"가 언급되지 않으면:\n- 모든 대기 중인 [ ] 칸반 태스크를 **제거**\n- 모든 완료된 [x] 또는 진행 중인 [-] 칸반 태스크는 **보존**\n- **노트 추가**: \"_참고: 칸반 기능이 스펙에서 제거되었지만 완료된 작업은 보존됨_\"\n\n## 다음 단계\n아래 문서를 분석한 후:\n1. 3단계 검증 프로세스 수행\n2. **결정점**: 검증 후 변경이 필요하지 않으면 단순히 \"태스크가 이미 정렬됨\"라고 보고하고 중단\n3. **변경이 필요한 경우에만**: 다음으로 create-spec-doc 도구 사용:\n   - projectPath: \"{{projectPath}}\"\n   - specName: \"{{specName}}\"\n   - document: \"tasks\"\n   - content: [검증되고 업데이트된 태스크 마크다운 - 원본과 같은 형식]\n4. 현재 요구사항만 태스크를 가지도록 확실히\n5. 태스크 의존성과 순서가 의미가 있는지 확인\n6. **기억**: Tasks.md는 업데이트된 태스크 목록만 포함해야 함 - 추가 섹션 없음"
      },
      "fullContext": "{{instructions}}\n\n{{taskAnalysis}}\n\n---\n\n## 요구사항 문서\n{{requirementsContent}}\n\n---\n\n## 설계 문서\n{{designContent}}\n\n---\n\n## 현재 태스크 문서\n{{tasksContent}}\n\n---\n\n## 요약\n이제 태스크 목록을 새로고침하는 데 필요한 모든 컨텍스트가 있습니다. create-spec-doc 도구를 사용하여 다음과 같은 업데이트된 tasks.md를 생성하세요:\n- 모든 완료된 ([x])과 진행 중인 ([-]) 태스크 보존 (기능이 제거되었어도)\n- 현재 requirements.md/design.md에 없는 기능의 대기 중인 ([ ]) 태스크 제거\n- 태스크가 없는 요구사항/설계 요소에 대한 새 태스크 추가\n- 적절한 태스크 순서와 요구사항 참조 확인\n- requirements.md/design.md에서 실제로 명시된 기능을 구현하는 태스크만 포함\n\n**기억**: 기능이 태스크에는 존재하지만 requirements.md/design.md에는 없으면 스펙에서 삭제된 것이고 대기 중인 태스크는 제거되어야 합니다.",
      "messages": {
        "noRequirements": "requirements.md를 찾을 수 없음",
        "noDesign": "design.md를 찾을 수 없음",
        "noTasks": "tasks.md가 존재하지 않음 - 처음부터 생성"
      },
      "nextSteps": {
        "pass1": "1단계: 각 기존 태스크를 requirements.md/design.md에 대해 검증",
        "pass2": "2단계: 격차 식별 - 태스크 없는 요구사항/설계 요소 찾기",
        "decision": "결정: 변경이 필요하지 않으면 \"태스크가 이미 정렬됨\"라고 보고하고 중단",
        "pass3": "3단계: 변경이 필요한 경우에만 create-spec-doc 도구를 사용하여 업데이트된 tasks.md 생성"
      },
      "errors": {
        "noContext": "requirements.md나 design.md를 찾을 수 없습니다. 명세서 컨텍스트 없이는 태스크를 새로고침할 수 없습니다.",
        "genericFail": "새로고침 컨텍스트 로드 실패: {{message}}",
        "nextSteps": {
          "createReq": "먼저 create-spec-doc 도구를 사용하여 requirements.md 생성",
          "createDesign": "요구사항이 승인된 후 design.md 생성",
          "thenRefresh": "그 다음 refresh-tasks를 사용하여 정렬된 태스크 목록 생성",
          "checkDir": "명세서 디렉토리가 존재하는지 확인",
          "checkPerms": "파일 권한 확인",
          "checkName": "스펙 이름이 올바른지 확인"
        }
      }
    },
    "getTemplateContext": {
      "description": "스펙 또는 가이드 문서를 위한 특정 문서 템플릿을 로드합니다.\n\n# 지침\n현재 단계에 필요한 정확한 템플릿으로 호출하세요. 스펙 워크플로우의 경우 요구사항, 설계, 또는 태스크 템플릿을 요청하세요. 가이드 문서의 경우 제품, 기술, 또는 구조 템플릿을 요청하세요. 각 템플릿은 create-spec-doc 또는 create-steering-doc 도구가 기대하는 정확한 형식을 제공합니다.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "templateTypeDescription": "템플릿 유형: 워크플로우 템플릿은 spec, 프로젝트 문서는 steering",
      "templateDescription": "로드할 특정 템플릿",
      "docTitles": {
        "requirements": "요구사항 템플릿",
        "design": "설계 템플릿",
        "tasks": "태스크 템플릿",
        "product": "제품 템플릿",
        "tech": "기술 템플릿",
        "structure": "구조 템플릿"
      },
      "successMessage": "{{templateType}}용 {{template}} 템플릿을 로드했습니다",
      "messages": {
        "fullContext": "## {{title}}\n\n{{content}}\n\n**참고**: 템플릿이 로드되었습니다. {{template}} 문서를 생성할 때 이 구조를 사용하세요."
      },
      "nextSteps": {
        "success": {
          "useTemplate": "{{template}} 문서에 템플릿 사용",
          "followStructure": "템플릿 구조를 정확히 따르기",
          "nextSpec": "다음: document: \"{{template}}\"와 함께 create-spec-doc",
          "nextSteering": "다음: document: \"{{template}}\"와 함께 create-steering-doc"
        }
      },
      "errors": {
        "invalidType": "잘못된 템플릿 유형: {{templateType}}",
        "validTypes": "사용: spec 또는 steering",
        "invalidTemplateForType": "유형 \"{{templateType}}\"에 대해 잘못된 템플릿 \"{{template}}\"",
        "validTemplates": "유효한 템플릿: {{validTemplates}}",
        "validSpecTemplates": "사용: requirements, design, 또는 tasks",
        "validSteeringTemplates": "사용: product, tech, 또는 structure",
        "templateEmpty": "템플릿 파일이 존재하지만 비어있음: {{file}}",
        "fileNotFound": "템플릿 파일을 찾을 수 없음: {{file}}",
        "genericFail": "템플릿 컨텍스트 로드 실패: {{message}}",
        "nextSteps": {
          "checkContent": "템플릿 파일 내용 확인",
          "verifyIntegrity": "파일 무결성 확인",
          "checkDirectory": "템플릿 디렉토리 확인",
          "verifyExists": "템플릿 파일이 존재하는지 확인",
          "location": "위치: {{location}}",
          "checkPermissions": "파일 권한 확인",
          "checkFiles": "템플릿 파일 확인"
        }
      }
    },
    "getSteeringContext": {
      "description": "아키텍처 및 제품 컨텍스트를 위한 프로젝트 가이드 문서를 로드합니다.\n\n# 지침\n기존 프로젝트 가이드라인(product.md, tech.md, structure.md)을 확인하기 위해 초기 스펙 설정 중에 호출하세요. 새 프로젝트에는 선택사항이지만 기존 코드베이스에는 권장됩니다. 가이드 문서가 없으면 사용자에게 먼저 생성할지 아니면 스펙으로 진행할지 묻습니다.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "docTitles": {
        "product": "제품 컨텍스트",
        "tech": "기술 컨텍스트",
        "structure": "구조 컨텍스트"
      },
      "successMessage": "가이드 컨텍스트가 성공적으로 로드됨",
      "messages": {
        "notFound": "가이드 문서를 찾을 수 없음",
        "notFoundContext": "## 가이드 문서 컨텍스트\n\n가이드 문서를 찾을 수 없습니다. 감지된 기술 스택의 모범 사례를 사용하여 진행하세요.",
        "emptyDocs": "가이드 문서가 존재하지만 비어있음",
        "emptyContext": "## 가이드 문서 컨텍스트\n\n가이드 문서를 찾았지만 모두 비어있습니다.",
        "fullContext": "## 가이드 문서 컨텍스트 (사전 로드됨)\n\n{{sections}}\n\n**참고**: 가이드 문서가 사전 로드되었습니다. get-content를 사용하여 다시 가져오지 마세요."
      },
      "nextSteps": {
        "notFound": {
          "useBestPractices": "감지된 기술 스택에 대한 모범 사례와 컨벤션 사용",
          "askToCreate": "기존 코드베이스의 경우: 사용자에게 프로젝트별 가이드를 위한 가이드 문서를 생성할지 물어보세요",
          "newProjectNote": "새 프로젝트의 경우: 가이드 컨텍스트는 일반적으로 필요하지 않음 - 기술 모범 사례로 진행"
        },
        "empty": {
          "useBestPractices": "기술 스택에 대한 모범 사례와 컨벤션 사용",
          "askToPopulate": "기존 코드베이스의 경우: 사용자에게 프로젝트별 컨텍스트로 가이드 문서를 채울지 물어보세요",
          "newProjectNote": "새 프로젝트의 경우: 비어있는 가이드 문서는 괜찮음 - 표준 사례로 진행"
        },
        "success": {
          "doNotCallAgain": "가이드 컨텍스트 로드됨 - get-steering-context를 다시 호출하지 마세요",
          "reference": "요구사항, 설계, 태스크에서 이러한 표준 참조",
          "align": "모든 결정이 문서화된 프로젝트 비전과 일치하도록 확인"
        }
      },
      "errors": {
        "genericFail": "가이드 컨텍스트 로드 실패: {{message}}",
        "nextSteps": {
          "checkPath": "프로젝트 경로가 존재하는지 확인",
          "checkPermissions": "파일 권한 확인",
          "runSetup": "가이드 문서가 누락되면 spec-steering-setup 실행"
        }
      }
    },
    "getSpecContext": {
      "description": "재개된 작업을 위해 기존 스펙 문서를 로드합니다.\n\n# 지침\n휴식 후 기존 스펙에서 작업을 재개하거나 생성하지 않은 스펙에서 새로 시작할 때만 호출하세요. 방금 문서를 생성한 경우 활성 스펙 생성 중에는 사용하지 마세요. 구현 컨텍스트를 위해 requirements.md, design.md, tasks.md를 로드합니다.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "specNameDescription": "컨텍스트를 로드할 명세서 이름",
      "docTitles": {
        "requirements": "요구사항",
        "design": "설계",
        "tasks": "태스크"
      },
      "successMessage": "명세서 컨텍스트가 성공적으로 로드됨: {{specName}}",
      "messages": {
        "emptyDocs": "\"{{specName}}\"에 대한 명세서 문서가 존재하지만 비어있습니다",
        "emptyContext": "## 명세서 컨텍스트\n\n{{specName}}에 대한 명세서 문서를 찾을 수 없습니다",
        "fullContext": "## 명세서 컨텍스트 (사전 로드됨): {{specName}}\n\n{{sections}}\n\n**참고**: 명세서 문서가 사전 로드되었습니다. get-content를 사용하여 다시 가져오지 마세요."
      },
      "nextSteps": {
        "empty": {
          "addContent": ".spec-workflow/specs/{{specName}}/에 내용 추가",
          "createMissing": "누락된 문서 생성",
          "ensureContent": "세 문서 모두 내용이 있도록 확인"
        },
        "success": {
          "proceed": "컨텍스트 로드됨 - 구현 진행",
          "reference": "각 태스크에 대한 요구사항과 설계 참조",
          "updateStatus": "manage-tasks로 태스크 상태 업데이트"
        }
      },
      "errors": {
        "notFound": "{{specName}}에 대한 명세서를 찾을 수 없음",
        "availableSpecs": "사용 가능한 스펙: {{specs}}",
        "genericFail": "명세서 컨텍스트 로드 실패: {{message}}",
        "nextSteps": {
          "useExisting": "기존 스펙 이름 사용",
          "createNew": "또는 create-spec-doc으로 새로 생성",
          "create": "create-spec-doc으로 스펙 생성",
          "checkSpelling": "스펙 이름 철자 확인",
          "verifySetup": "프로젝트 설정 확인",
          "checkPath": "프로젝트 경로 확인",
          "verifyName": "스펙 이름 확인",
          "checkPermissions": "파일 권한 확인",
          "createIfMissing": "누락된 경우 스펙 생성"
        }
      }
    },
    "getApprovalStatus": {
      "description": "승인 요청의 현재 상태를 확인합니다.\n\n# 지침\nrequest-approval 후 사용자 결정을 폴링하기 위해 호출하세요. 상태가 \"approved\" 또는 \"needs-revision\"일 때까지 계속 확인하세요. needs-revision이면 피드백을 검토하고 create-spec-doc으로 문서를 업데이트한 다음 새 승인 요청을 생성하세요. \"approved\" 상태 후에만 다음 단계로 진행하세요.",
      "projectPathDescription": "프로젝트 루트의 절대 경로 (선택사항 - 제공되지 않으면 컨텍스트 사용)",
      "approvalIdDescription": "확인할 승인 요청의 ID",
      "messages": {
        "pending": "차단됨: 상태가 {{status}}입니다. 구두 승인은 수락되지 않습니다. 대시보드 또는 VS Code 확장만 사용하세요.",
        "other": "승인 상태: {{status}}"
      },
      "nextSteps": {
        "pending": {
          "blocked": "차단됨 - 진행하지 마세요",
          "noVerbal": "구두 승인은 수락되지 않음 - 대시보드 또는 VS Code 확장만 사용",
          "useUI": "승인은 대시보드 또는 VS Code 확장을 통해서만 가능",
          "poll": "get-approval-status로 계속 폴링"
        },
        "approved": {
          "canProceed": "승인됨 - 진행 가능",
          "delete": "계속하기 전에 delete-approval 실행",
          "response": "응답: {{response}}"
        },
        "rejected": {
          "blocked": "차단됨 - 거부됨",
          "doNotProceed": "진행하지 마세요",
          "revise": "피드백을 검토하고 수정",
          "reason": "이유: {{reason}}",
          "notes": "노트: {{notes}}"
        },
        "needsRevision": {
          "blocked": "차단됨 - 진행하지 마세요",
          "update": "피드백으로 문서 업데이트",
          "newRequest": "새 승인 요청 생성",
          "feedback": "피드백: {{feedback}}",
          "notes": "노트: {{notes}}",
          "comments": "대상 수정을 위한 {{count}}개 코멘트"
        }
      },
      "errors": {
        "projectPathRequired": "프로젝트 경로가 필요합니다. projectPath 매개변수를 제공해주세요.",
        "notFound": "승인 요청을 찾을 수 없음: {{approvalId}}",
        "genericFail": "승인 상태 확인 실패: {{message}}"
      }
    },
    "deleteApproval": {
      "description": "시스템에서 완료된 승인 요청을 정리합니다.\n\n# 지침\n\"approved\" 상태를 받은 즉시 호출하세요. 승인 혼란을 방지하기 위한 필수 정리 단계입니다. 다음 워크플로우 단계로 이동하기 전에 완료되어야 합니다. 향후 요청을 위해 승인 시스템을 정리된 상태로 유지합니다.",
      "projectPathDescription": "프로젝트 루트의 절대 경로 (선택사항 - 제공되지 않으면 컨텍스트 사용)",
      "approvalIdDescription": "삭제할 승인 요청의 ID",
      "successMessage": "승인 요청 \"{{approvalId}}\"이 성공적으로 삭제됨",
      "nextSteps": {
        "cleanupComplete": "정리 완료",
        "continue": "다음 단계로 계속"
      },
      "errors": {
        "projectPathRequired": "프로젝트 경로가 필요합니다. projectPath 매개변수를 제공해주세요.",
        "notFound": "승인 요청 \"{{approvalId}}\"을 찾을 수 없음",
        "notApproved": "차단됨: 진행할 수 없음 - 상태가 \"{{status}}\"입니다. 구두 승인은 수락되지 않습니다. 대시보드 또는 VS Code 확장을 사용하세요.",
        "deleteFailed": "승인 요청 \"{{approvalId}}\" 삭제 실패",
        "genericFail": "승인 삭제 실패: {{message}}",
        "nextSteps": {
          "verifyId": "승인 ID 확인",
          "checkStatus": "get-approval-status로 상태 확인",
          "stop": "중단 - 다음 단계로 진행하지 마세요",
          "wait": "승인 대기",
          "poll": "get-approval-status로 폴링",
          "checkPermissions": "파일 권한 확인",
          "verifyExists": "승인이 존재하는지 확인",
          "retry": "다시 시도",
          "checkPath": "프로젝트 경로 확인",
          "checkSystem": "승인 시스템 확인"
        }
      }
    },
    "createSteeringDoc": {
      "description": "아키텍처 가이드가 포함된 프로젝트 가이드 문서를 생성합니다.\n\n# 지침\n사용자가 가이드 문서 생성을 명시적으로 승인한 후에만 호출하세요. 스펙 워크플로우에는 필요하지 않습니다. product.md(비전/목표), tech.md(기술 결정), structure.md(코드베이스 구성) 중 하나를 생성합니다. 템플릿을 위해 먼저 steering-guide를 사용하세요.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "documentDescription": "생성할 가이드 문서: product, tech, 또는 structure",
      "contentDescription": "가이드 문서의 완전한 마크다운 내용",
      "docNames": {
        "product": "제품 가이드",
        "tech": "기술 가이드",
        "structure": "구조 가이드"
      },
      "successMessage": "{{docName}} 문서가 성공적으로 생성됨",
      "nextSteps": {
        "saved": "{{filename}} 저장됨",
        "product": "다음: tech.md 생성",
        "tech": "다음: structure.md 생성",
        "structure": "가이드 완료. category:\"steering\" 및 categoryName:\"steering\"으로 request-approval 사용",
        "dashboard": "대시보드: {{dashboardUrl}}",
        "dashboardUnavailable": "대시보드를 사용할 수 없음"
      },
      "errors": {
        "failed": "{{document}} 가이드 문서 생성 실패: {{message}}",
        "nextSteps": {
          "checkPath": "프로젝트 경로가 존재하는지 확인",
          "verifyContent": "마크다운 내용 확인",
          "retry": "올바른 매개변수로 다시 시도"
        }
      }
    },
    "createSpecDoc": {
      "description": "워크플로우 순서에 따라 스펙 문서를 생성하거나 업데이트합니다.\n\n# 지침\n각 단계에서 템플릿을 로드하고 내용을 생성한 후 호출하세요. 한 번에 하나의 문서를 생성합니다: 먼저 요구사항, 그다음 설계, 그다음 태스크. 사용자 승인 없이 여러 문서를 생성하지 마세요. 항상 get-template-context의 템플릿 구조를 따르세요.",
      "projectPathDescription": "프로젝트 루트의 절대 경로",
      "specNameDescription": "kebab-case 기능 이름 (예: user-authentication)",
      "documentDescription": "생성/업데이트할 스펙 문서: requirements, design, 또는 tasks",
      "contentDescription": "스펙 문서의 완전한 마크다운 내용",
      "errors": {
        "designBeforeReq": "워크플로우 위반: requirements.md가 존재하기 전에는 design.md를 생성할 수 없습니다!\n먼저 requirements.md를 생성하고 사용자 검토를 받은 다음 design.md를 생성하세요.",
        "tasksBeforeDesign": "워크플로우 위반: design.md가 존재하기 전에는 tasks.md를 생성할 수 없습니다!\n먼저 design.md를 생성하고 사용자 검토를 받은 다음 tasks.md를 생성하세요.",
        "failed": "실패: {{message}}"
      },
      "successMessage": "{{filePath}}에 {{filename}}을 생성했습니다\n\n차단: 대시보드 또는 VS Code 확장을 통해 승인을 요청해야 합니다.\n구두 승인은 수락되지 않습니다.\n시스템이 승인된 상태를 보여줄 때까지 진행하지 마세요."
    },
    "specWorkflowGuide": {
      "description": "아이디어에서 구현까지 기능 개발을 안내하는 필수 스펙 워크플로우 지침을 로드합니다.\n\n# 지침\n사용자가 스펙 생성, 기능 개발을 요청하거나 명세서에 대해 언급할 때 먼저 이 도구를 호출하세요. 이것은 따라야 하는 완전한 워크플로우 순서(요구사항 → 설계 → 태스크 → 구현)를 제공합니다. 적절한 워크플로우 이해를 보장하기 위해 다른 스펙 도구 전에 항상 로드하세요.",
      "dashboardMessage": "대시보드에서 진행상황 모니터링: {{dashboardUrl}}",
      "dashboardUnavailable": "대시보드를 사용할 수 없음 - 헤드리스 모드로 실행 중",
      "successMessage": "완전한 스펙 워크플로우 가이드가 로드됨 - 정확히 이 워크플로우를 따르세요",
      "nextSteps": {
        "step1": "순서 따르기: 요구사항 → 설계 → 태스크 → 구현",
        "step2": "먼저 get-template-context로 템플릿 로드",
        "step3": "각 문서 후 승인 요청",
        "step4": "MCP 도구만 사용"
      },
      "guide": "# 스펙 개발 워크플로우\n\n## 개요\n\nMCP 도구를 사용하여 사용자에게 스펙 기반 개발을 안내합니다. 요구사항 → 설계 → 태스크 → 구현 단계를 통해 대략적인 아이디어를 세부 명세서로 변환합니다. 사용 가능한 경우 현재 모범 사례를 위해 웹 검색을 사용하세요.\n\n기능 이름은 kebab-case를 사용합니다 (예: user-authentication). 한 번에 하나의 스펙을 생성합니다.\n\n## 워크플로우 다이어그램\n```mermaid\nflowchart TD\n    Start([시작: 사용자가 기능 요청]) --> CheckSteering{가이드 문서 존재?}\n    CheckSteering -->|Yes| P1_Load[get-steering-context]\n    CheckSteering -->|No| P1_Template\n    \n    %% 1단계: 요구사항\n    P1_Load --> P1_Template[get-template-context<br/>templateType: spec<br/>template: requirements]\n    P1_Template --> P1_Research[가능하면 웹 검색]\n    P1_Research --> P1_Create[create-spec-doc<br/>document: requirements]\n    P1_Create --> P1_Approve[request-approval<br/>filePath만]\n    P1_Approve --> P1_Status[get-approval-status<br/>상태 폴링]\n    P1_Status --> P1_Check{상태는?}\n    P1_Check -->|needs-revision| P1_Update[사용자 코멘트를 참고하여 문서 업데이트]\n    P1_Update --> P1_Create\n    P1_Check -->|approved| P1_Clean[delete-approval]\n    P1_Clean -->|failed| P1_Status\n    \n    %% 2단계: 설계\n    P1_Clean -->|success| P2_Template[get-template-context<br/>templateType: spec<br/>template: design]\n    P2_Template --> P2_Analyze[코드베이스 패턴 분석]\n    P2_Analyze --> P2_Create[create-spec-doc<br/>document: design]\n    P2_Create --> P2_Approve[request-approval<br/>filePath만]\n    P2_Approve --> P2_Status[get-approval-status<br/>상태 폴링]\n    P2_Status --> P2_Check{상태는?}\n    P2_Check -->|needs-revision| P2_Update[사용자 코멘트를 참고하여 문서 업데이트]\n    P2_Update --> P2_Create\n    P2_Check -->|approved| P1_Clean[delete-approval]\n    P2_Clean -->|failed| P2_Status\n    \n    %% 3단계: 태스크\n    P2_Clean -->|success| P3_Template[get-template-context<br/>templateType: spec<br/>template: tasks]\n    P3_Template --> P3_Break[설계를 태스크로 변환]\n    P3_Break --> P3_Create[create-spec-doc<br/>document: tasks]\n    P3_Create --> P3_Approve[request-approval<br/>filePath만]\n    P3_Approve --> P3_Status[get-approval-status<br/>상태 폴링]\n    P3_Status --> P3_Check{상태는?}\n    P3_Check -->|needs-revision| P3_Update[사용자 코멘트를 참고하여 문서 업데이트]\n    P3_Update --> P3_Create\n    P3_Check -->|approved| P3_Clean[delete-approval]\n    P3_Clean -->|failed| P3_Status\n    \n    %% 4단계: 구현\n    P3_Clean -->|success| P4_Ready[스펙 완료.<br/>구현 준비?]\n    P4_Ready -->|Yes| P4_Status[spec-status]\n    P4_Status --> P4_Task[manage-tasks<br/>action: set-status<br/>status: in-progress]\n    P4_Task --> P4_Code[코드 구현]\n    P4_Code --> P4_Complete[manage-tasks<br/>action: set-status<br/>status: completed]\n    P4_Complete --> P4_More{더 많은 태스크?}\n    P4_More -->|Yes| P4_Task\n    P4_More -->|No| End([구현 완료])\n    \n    style Start fill:#e1f5e1\n    style End fill:#e1f5e1\n    style P1_Check fill:#ffe6e6\n    style P2_Check fill:#ffe6e6\n    style P3_Check fill:#ffe6e6\n    style CheckSteering fill:#fff4e6\n    style P4_More fill:#fff4e6\n```\n\n## 스펙 워크플로우\n\n### 1단계: 요구사항\n**목적**: 사용자 요구를 바탕으로 무엇을 구축할지 정의합니다.\n\n**도구**:\n- get-steering-context: 프로젝트 가이드라인 확인 (기존 코드베이스인 경우)\n- get-template-context: 요구사항 템플릿 로드 (templateType: \"spec\", template: \"requirements\")\n- create-spec-doc: requirements.md 생성\n- request-approval: 사용자 승인 받기\n- get-approval-status: 승인 상태 확인\n- delete-approval: 승인 후 정리\n\n**프로세스**:\n1. 가이드 문서 확인 (기존 코드베이스에 대해 생성을 원하는지 사용자에게 묻기)\n2. 요구사항 템플릿 로드\n3. 시장/사용자 기대 조사 (웹 검색 가능한 경우)\n4. EARS 기준으로 사용자 스토리로 요구사항 생성\n5. create-spec-doc으로 문서 생성\n6. 승인 요청 (filePath만, 내용은 절대 안 됨)\n7. 승인/수정필요 상태까지 폴링 (구두 승인은 절대 수락하지 않음)\n8. 수정필요 시: 문서 업데이트, 새 승인 생성, 진행하지 않음\n9. 승인 시: 진행 전 delete-approval (성공해야 함)\n10. delete-approval 실패 시: 중단 - 폴링으로 돌아가기\n\n### 2단계: 설계\n**목적**: 모든 요구사항을 다루는 기술 설계를 생성합니다.\n\n**도구**:\n- get-template-context: 설계 템플릿 로드 (templateType: \"spec\", template: \"design\")\n- create-spec-doc: design.md 생성\n- request-approval: 사용자 승인 받기\n- get-approval-status: 상태 확인\n- delete-approval: 정리\n\n**프로세스**:\n1. 설계 템플릿 로드\n2. 재사용할 패턴을 위해 코드베이스 분석\n3. 기술 선택 조사 (웹 검색 가능한 경우)\n4. 모든 템플릿 섹션으로 설계 생성\n5. 문서 생성 및 승인 요청\n6. 승인/수정필요 상태까지 폴링\n7. 수정필요 시: 문서 업데이트, 새 승인 생성, 진행하지 않음\n8. 승인 시: 진행 전 delete-approval (성공해야 함)\n9. delete-approval 실패 시: 중단 - 폴링으로 돌아가기\n\n### 3단계: 태스크\n**목적**: 설계를 원자적 구현 태스크로 분해합니다.\n\n**도구**:\n- get-template-context: 태스크 템플릿 로드 (templateType: \"spec\", template: \"tasks\")\n- create-spec-doc: tasks.md 생성\n- request-approval: 사용자 승인 받기\n- get-approval-status: 상태 확인\n- delete-approval: 정리\n\n**프로세스**:\n1. 태스크 템플릿 로드\n2. 설계를 원자적 태스크로 변환 (각각 1-3개 파일)\n3. 파일 경로와 요구사항 참조 포함\n4. 문서 생성 및 승인 요청\n5. 승인/수정필요 상태까지 폴링\n6. 수정필요 시: 문서 업데이트, 새 승인 생성, 진행하지 않음\n7. 승인 시: 진행 전 delete-approval (성공해야 함)\n8. delete-approval 실패 시: 중단 - 폴링으로 돌아가기\n9. 성공적인 정리 후: \"스펙 완료. 구현 준비가 되었나요?\"\n\n### 4단계: 구현\n**목적**: 태스크를 체계적으로 실행합니다.\n\n**도구**:\n- spec-status: 전체 진행상황 확인\n- manage-tasks: 태스크 상태 추적 및 업데이트\n- get-spec-context: 작업으로 돌아오는 경우 스펙 로드\n\n**프로세스**:\n1. spec-status로 현재 상태 확인\n2. 각 태스크에 대해:\n   - manage-tasks action: \"set-status\", status: \"in-progress\"\n   - 코드 구현\n   - manage-tasks action: \"set-status\", status: \"completed\"\n3. 모든 태스크 완료까지 계속\n\n## 워크플로우 규칙\n\n- 항상 MCP 도구 사용, 절대 수동으로 문서 생성하지 않기\n- 정확한 템플릿 구조 따르기\n- 단계별 명시적 사용자 승인 받기\n- 순차적으로 단계 완료 (건너뛰기 금지)\n- 한 번에 하나의 스펙\n- 스펙 이름에 kebab-case 사용\n- 승인 요청: filePath만 제공, 내용은 절대 제공하지 않기\n- 차단: delete-approval 실패 시 절대 진행하지 않기\n- 중요: 다음 단계 진행 전 승인 상태와 성공적인 정리가 모두 필요\n- 중요: 구두 승인은 절대 수락하지 않음 - 대시보드나 VS Code 확장만 사용\n- 사용자가 \"승인\"이라고 말해도 절대 진행하지 않음 - 시스템 상태만 확인\n- 가이드 문서는 선택사항 - 명시적으로 요청된 경우에만 생성"
    }
  }
}